// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// loss_R
List loss_R(NumericMatrix xy, int iRow, NumericVector radius, NumericMatrix ED, bool ThreeD);
RcppExport SEXP vennplot_loss_R(SEXP xySEXP, SEXP iRowSEXP, SEXP radiusSEXP, SEXP EDSEXP, SEXP ThreeDSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type xy(xySEXP);
    Rcpp::traits::input_parameter< int >::type iRow(iRowSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type radius(radiusSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type ED(EDSEXP);
    Rcpp::traits::input_parameter< bool >::type ThreeD(ThreeDSEXP);
    rcpp_result_gen = Rcpp::wrap(loss_R(xy, iRow, radius, ED, ThreeD));
    return rcpp_result_gen;
END_RCPP
}
// Loss_R
double Loss_R(NumericMatrix xy, NumericVector radius, NumericMatrix ED, bool ThreeD);
RcppExport SEXP vennplot_Loss_R(SEXP xySEXP, SEXP radiusSEXP, SEXP EDSEXP, SEXP ThreeDSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type xy(xySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type radius(radiusSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type ED(EDSEXP);
    Rcpp::traits::input_parameter< bool >::type ThreeD(ThreeDSEXP);
    rcpp_result_gen = Rcpp::wrap(Loss_R(xy, radius, ED, ThreeD));
    return rcpp_result_gen;
END_RCPP
}
// loop_R
List loop_R(NumericMatrix xy, double ALPHA, NumericVector radius, NumericMatrix ED, bool ThreeD);
RcppExport SEXP vennplot_loop_R(SEXP xySEXP, SEXP ALPHASEXP, SEXP radiusSEXP, SEXP EDSEXP, SEXP ThreeDSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type xy(xySEXP);
    Rcpp::traits::input_parameter< double >::type ALPHA(ALPHASEXP);
    Rcpp::traits::input_parameter< NumericVector >::type radius(radiusSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type ED(EDSEXP);
    Rcpp::traits::input_parameter< bool >::type ThreeD(ThreeDSEXP);
    rcpp_result_gen = Rcpp::wrap(loop_R(xy, ALPHA, radius, ED, ThreeD));
    return rcpp_result_gen;
END_RCPP
}
// trans_R
NumericVector trans_R(NumericMatrix xy, NumericVector radius, double radiusvec, NumericVector radiusall);
RcppExport SEXP vennplot_trans_R(SEXP xySEXP, SEXP radiusSEXP, SEXP radiusvecSEXP, SEXP radiusallSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type xy(xySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type radius(radiusSEXP);
    Rcpp::traits::input_parameter< double >::type radiusvec(radiusvecSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type radiusall(radiusallSEXP);
    rcpp_result_gen = Rcpp::wrap(trans_R(xy, radius, radiusvec, radiusall));
    return rcpp_result_gen;
END_RCPP
}
// alldis_R
int alldis_R(NumericMatrix xy1, NumericMatrix xy2, NumericVector radius1, NumericVector radius2, double delta);
RcppExport SEXP vennplot_alldis_R(SEXP xy1SEXP, SEXP xy2SEXP, SEXP radius1SEXP, SEXP radius2SEXP, SEXP deltaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type xy1(xy1SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type xy2(xy2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type radius1(radius1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type radius2(radius2SEXP);
    Rcpp::traits::input_parameter< double >::type delta(deltaSEXP);
    rcpp_result_gen = Rcpp::wrap(alldis_R(xy1, xy2, radius1, radius2, delta));
    return rcpp_result_gen;
END_RCPP
}
// close_R
List close_R(NumericMatrix xy1, NumericMatrix xy2, NumericVector radius1, NumericVector radius2, double delta, NumericVector direc);
RcppExport SEXP vennplot_close_R(SEXP xy1SEXP, SEXP xy2SEXP, SEXP radius1SEXP, SEXP radius2SEXP, SEXP deltaSEXP, SEXP direcSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type xy1(xy1SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type xy2(xy2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type radius1(radius1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type radius2(radius2SEXP);
    Rcpp::traits::input_parameter< double >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type direc(direcSEXP);
    rcpp_result_gen = Rcpp::wrap(close_R(xy1, xy2, radius1, radius2, delta, direc));
    return rcpp_result_gen;
END_RCPP
}
// list_R1
NumericMatrix list_R1(NumericMatrix M, NumericMatrix xy, NumericVector radius, int k, double yuan, double xuan, int num);
RcppExport SEXP vennplot_list_R1(SEXP MSEXP, SEXP xySEXP, SEXP radiusSEXP, SEXP kSEXP, SEXP yuanSEXP, SEXP xuanSEXP, SEXP numSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type M(MSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type xy(xySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type radius(radiusSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< double >::type yuan(yuanSEXP);
    Rcpp::traits::input_parameter< double >::type xuan(xuanSEXP);
    Rcpp::traits::input_parameter< int >::type num(numSEXP);
    rcpp_result_gen = Rcpp::wrap(list_R1(M, xy, radius, k, yuan, xuan, num));
    return rcpp_result_gen;
END_RCPP
}
// list_R2
NumericMatrix list_R2(Rcpp::List myList, int m, int num);
RcppExport SEXP vennplot_list_R2(SEXP myListSEXP, SEXP mSEXP, SEXP numSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type myList(myListSEXP);
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    Rcpp::traits::input_parameter< int >::type num(numSEXP);
    rcpp_result_gen = Rcpp::wrap(list_R2(myList, m, num));
    return rcpp_result_gen;
END_RCPP
}
// list_R3
NumericVector list_R3(NumericMatrix M, NumericMatrix Me);
RcppExport SEXP vennplot_list_R3(SEXP MSEXP, SEXP MeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type M(MSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Me(MeSEXP);
    rcpp_result_gen = Rcpp::wrap(list_R3(M, Me));
    return rcpp_result_gen;
END_RCPP
}
// list_R4
NumericVector list_R4(NumericMatrix M);
RcppExport SEXP vennplot_list_R4(SEXP MSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type M(MSEXP);
    rcpp_result_gen = Rcpp::wrap(list_R4(M));
    return rcpp_result_gen;
END_RCPP
}
